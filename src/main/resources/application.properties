# ===============================
# BASIC SERVER CONFIGURATION
# ===============================
server.port=${SERVER_PORT:8081}
server.servlet.context-path=${CONTEXT_PATH:}

# ===============================
# APPLICATION METADATA
# ===============================
app.name=${APP_NAME:IACRM-Backend}
app.version=${APP_VERSION:1.0.0}
app.environment=${APP_ENVIRONMENT:development}

# ===============================
# DATABASE CONFIGURATION - SEGURO
# ===============================
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:iacrm}
spring.datasource.username=${DB_USER:}
spring.datasource.password=${DB_PASSWORD:}

# Hibernate - configuración simplificada usando esquema público
spring.jpa.hibernate.ddl-auto=${DB_DDL_AUTO:update}
spring.jpa.show-sql=${DB_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${DB_FORMAT_SQL:true}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Connection pool settings
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX_SIZE:5}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:2}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:20000}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:300000}
spring.datasource.hikari.leak-detection-threshold=${DB_LEAK_DETECTION:60000}

# ===============================
# SECURITY & AUTHENTICATION - SEGURO
# ===============================
jwt.secret=${JWT_SECRET:}
jwt.expiration=${JWT_EXPIRATION:86400000}
bot.api.key=${BOT_API_KEY:}

# ===============================
# CORS CONFIGURATION
# ===============================
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080,http://localhost:3001}
cors.allowed.methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed.headers=${CORS_ALLOWED_HEADERS:*}
cors.allow.credentials=${CORS_ALLOW_CREDENTIALS:true}

# ===============================
# OPENAI CONFIGURATION - SEGURO
# ===============================
openai.api.key=${OPENAI_API_KEY:}
openai.assistant.id=${OPENAI_ASSISTANT_ID:}
openai.model=${OPENAI_MODEL:gpt-4}
openai.max.tokens=${OPENAI_MAX_TOKENS:10000}
openai.temperature=${OPENAI_TEMPERATURE:0.7}

# ===============================
# WEBHOOKS CONFIGURATION - SEGURO
# ===============================
webhook.make.url=${WEBHOOK_MAKE_URL:}
webhook.save.contact.url=${WEBHOOK_SAVE_CONTACT_URL:}
webhook.timeout=${WEBHOOK_TIMEOUT:30000}
webhook.retry.attempts=${WEBHOOK_RETRY_ATTEMPTS:3}

# ===============================
# LOGGING CONFIGURATION
# ===============================
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.org.springframework.security=${LOG_LEVEL_SECURITY:WARN}
logging.level.com.chatgpt.backend=${LOG_LEVEL_APP:DEBUG}
logging.pattern.console=${LOG_PATTERN:%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n}
logging.file.name=${LOG_FILE_NAME:logs/iacrm-backend.log}

# ===============================
# BUSINESS LOGIC CONFIGURATION
# ===============================
# Límites inteligentes por tiempo (reemplaza límite absoluto)
business.max.messages.per.minute=${MAX_MESSAGES_PER_MINUTE:5}
business.max.messages.per.hour=${MAX_MESSAGES_PER_HOUR:20}
business.max.messages.per.day=${MAX_MESSAGES_PER_DAY:100}
business.message.timeout=${MESSAGE_TIMEOUT:30}
business.thread.cleanup.interval=${THREAD_CLEANUP_INTERVAL:3600}
business.default.user.category=${DEFAULT_USER_CATEGORY:CURIOSO}

# Configuración de planes y upgrades
business.plan.type=${PLAN_TYPE:FREE}
business.upgrade.threshold=${UPGRADE_THRESHOLD_PERCENT:80}
business.silent.limits=${SILENT_LIMITS:false}

# Configuración legacy (mantener compatibilidad)
business.max.messages.per.user=${MAX_MESSAGES_PER_USER:100}



# ======================
# BACKUP CONFIGURATIONS (commented for reference)
# ======================
# Local PostgreSQL:
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=iacrm_local
# DB_USER=postgres
# DB_PASSWORD=postgres
# DB_SCHEMA=public

# Railway PostgreSQL example:
# DB_HOST=yamanote.proxy.rlwy.net
# DB_PORT=13472
# DB_NAME=railway
# DB_SCHEMA=iacrm

# Local MySQL alternative:
# spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:iacrm}
# spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

